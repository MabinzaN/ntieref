//------------------------------------------------------------------------------
// <auto-generated>
//   This file was generated by T4 code generator Model2.tt.
//   Any changes made to this file manually may cause incorrect behavior
//   and will be lost next time the file is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using NTier.Common.Domain.Model;

namespace TableInheritance.Common.Domain.Model.TableInheritanceDemoDB
{
    [DataContract(IsReference = true)]
    public partial class TableInheritanceDemoDBChangeSet : IChangeSet
    {
        public TableInheritanceDemoDBChangeSet()
        {
        }

        protected TableInheritanceDemoDBChangeSet(TableInheritanceDemoDBChangeSet changeSet)
        {
            this.People = changeSet.People;
            this.Addresses = changeSet.Addresses;
            this.Demographics = changeSet.Demographics;
            this.EmployeeRoles = changeSet.EmployeeRoles;
        }

        [DataMember]
        public List<Person> People { get; set; }

        [DataMember]
        public List<Address> Addresses { get; set; }

        [DataMember]
        public List<Demographic> Demographics { get; set; }

        [DataMember]
        public List<EmployeeRole> EmployeeRoles { get; set; }

        public bool IsEmpty
        {
            get
            {
                return (ReferenceEquals(null, People) || People.Count == 0)
                    && (ReferenceEquals(null, Addresses) || Addresses.Count == 0)
                    && (ReferenceEquals(null, Demographics) || Demographics.Count == 0)
                    && (ReferenceEquals(null, EmployeeRoles) || EmployeeRoles.Count == 0);
            }
        }

        public IEnumerator<Entity> GetEnumerator()
        {
            if (People != null && People.Count > 0)
            {
                foreach (var item in People)
                {
                    yield return item;
                }
            }

            if (Addresses != null && Addresses.Count > 0)
            {
                foreach (var item in Addresses)
                {
                    yield return item;
                }
            }

            if (Demographics != null && Demographics.Count > 0)
            {
                foreach (var item in Demographics)
                {
                    yield return item;
                }
            }

            if (EmployeeRoles != null && EmployeeRoles.Count > 0)
            {
                foreach (var item in EmployeeRoles)
                {
                    yield return item;
                }
            }

        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }
    }
}

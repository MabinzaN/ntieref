//------------------------------------------------------------------------------
// <auto-generated>
//   This file was generated by T4 code generator NTierDemoModel_NTierEntityGenerator.tt.
//   Any changes made to this file manually may cause incorrect behavior
//   and will be lost next time the file is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using NTier.Client.Domain;
using NTierDemo.Common.Domain.Model.NTierDemo;

namespace NTierDemo.Client.Domain
{
    public partial class NTierDemoChangeSetFactory : ChangeSetFactory, INTierDemoChangeSetFactory
    {
        public NTierDemoChangeSet CreateChangeSet(IEnumerable<User> users, IEnumerable<Blog> blogs, IEnumerable<Post> posts)
        {
            // retrieve changes sets (modified entities)
            var userChangeSet = GetChangeSet(users);
            var blogChangeSet = GetChangeSet(blogs);
            var postChangeSet = GetChangeSet(posts);

            // reduce entities (copy changed values)
            var usersMap = ReduceToModifications(userChangeSet);
            var blogsMap = ReduceToModifications(blogChangeSet);
            var postsMap = ReduceToModifications(postChangeSet);

            // fixup relations (replaces related entities with reduced entites)
            FixupRelations(
                CastToEntityTuple(usersMap), 
                CastToEntityTuple(blogsMap), 
                CastToEntityTuple(postsMap)
            );

            var changeSet = new NTierDemoChangeSet();

            if (usersMap.Count > 0) changeSet.Users = usersMap.Select(e => e.ReducedEntity).ToList();
            if (blogsMap.Count > 0) changeSet.Blogs = blogsMap.Select(e => e.ReducedEntity).ToList();
            if (postsMap.Count > 0) changeSet.Posts = postsMap.Select(e => e.ReducedEntity).ToList();

            return changeSet;
        }
    }
}

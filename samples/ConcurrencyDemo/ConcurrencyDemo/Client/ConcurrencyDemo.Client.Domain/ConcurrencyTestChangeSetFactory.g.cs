//------------------------------------------------------------------------------
// <auto-generated>
//   This file was generated by T4 code generator DemoModel.tt.
//   Any changes made to this file manually may cause incorrect behavior
//   and will be lost next time the file is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using ConcurrencyDemo.Common.Domain.Model.ConcurrencyTest;
using NTier.Client.Domain;

namespace ConcurrencyDemo.Client.Domain
{
    public partial class ConcurrencyTestChangeSetFactory : ChangeSetFactory, IConcurrencyTestChangeSetFactory
    {
        public ConcurrencyTestChangeSet CreateChangeSet(IEnumerable<ARecord> aRecords, IEnumerable<BRecord> bRecords, IEnumerable<CRecord> cRecords)
        {
            // retrieve changes sets (modified entities)
            var aRecordChangeSet = GetChangeSet(aRecords);
            var bRecordChangeSet = GetChangeSet(bRecords);
            var cRecordChangeSet = GetChangeSet(cRecords);

            // reduce entities (copy changed values)
            var aRecordsMap = ReduceToModifications(aRecordChangeSet);
            var bRecordsMap = ReduceToModifications(bRecordChangeSet);
            var cRecordsMap = ReduceToModifications(cRecordChangeSet);

            // fixup relations (replaces related entities with reduced entites)
            FixupRelations(
                CastToEntityTuple(aRecordsMap), 
                CastToEntityTuple(bRecordsMap), 
                CastToEntityTuple(cRecordsMap)
            );

            var changeSet = new ConcurrencyTestChangeSet();

            if (aRecordsMap.Count > 0) changeSet.ARecords = aRecordsMap.Select(e => e.ReducedEntity).ToList();
            if (bRecordsMap.Count > 0) changeSet.BRecords = bRecordsMap.Select(e => e.ReducedEntity).ToList();
            if (cRecordsMap.Count > 0) changeSet.CRecords = cRecordsMap.Select(e => e.ReducedEntity).ToList();

            return changeSet;
        }
    }
}
